# LAMMPS input script to dynamically activate harmonic spring interactions between anchor beads
# Type 1 = chromatin bead, Type 2 = anchor bead
# Bond coeff 3 = chromatin backbone; Bond coeff 1 = dynamic anchor springs

# -- Simulation Initialization --
  units           lj
  atom_style      full

  bond_style      hybrid harmonic 
  angle_style     cosine
  dihedral_style  none

  pair_style      hybrid lj/cut 2.5

  pair_modify     mix arithmetic
  special_bonds   lj/coul  1 1 1
  boundary s s s    
  # Read system after energy minimization
  read_data 1_system_after_min.data
  
  pair_coeff 1 1 lj/cut 1.0 1.0 1.122462048309373
  pair_coeff 2 2 lj/cut 1.0 1.0 1.122462048309373
  bond_coeff 3 harmonic 100.0 1.0
  angle_coeff 1 5  

  bond_coeff 1 harmonic 0.0 0 

  bond_coeff 2 harmonic 0.0 0.0  
  
# -- Simulation Parameters --
mass      *  1.0
timestep     0.005     #  "dt"
dump         1 all custom 1000 traj_stage1.lammpstrj id mol type x y z ix iy iz
reset_timestep  0

# Set initial velocities to zero
velocity all create 0.0  123456

# Langevin thermostat to maintain temperature at 1.0
fix fxlan all langevin       1.0        1.0     1.0         123456

# Integrate equations of motion (required with Langevin)
fix fxnve all nve 
# (See http://lammps.sandia.gov/doc/fix_langevin.html)

# Recenters system coordinates each step
fix fxcenter all recenter 0.0 0.0 0.0

# Output settings for energy and pressure monitoring
thermo_style    custom step temp pe etotal press vol epair ebond eangle edihed
thermo_modify   norm no  #(report total energy not energy / num_atoms)
thermo          1000    #(time interval for printing out "thermo" data)

# -- Gradual Activation of Anchor Bonds --
variable nloop1 loop 300

# Loop over timesteps to linearly increase anchor bond stiffness
label loop1

print "############### LOOP ${nloop1} ###############"

# Compute timestep-based stiffness coefficient KbondC
variable time equal step
variable KbondC equal $((v_time+1)*(10.0/300000.0))
print "timestep = ${time}, KbondC = ${KbondC}" file KbondC_vs_time.dat

# Update bond strength for type 1 with gradually increasing KbondC
bond_coeff    1       harmonic    ${KbondC}  0.5

# Run simulation for 1000 steps at current stiffness
run   1000

next nloop1
jump SELF loop1

# Save the final system after loop anchoring
write_data 2_system_after_loopcreate.data
